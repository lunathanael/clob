/**
 * @page copyright
 * Copyright(c) 2025-present, Nathanael Lu.
 * Distributed under the MIT License (http://opensource.org/licenses/MIT)
 */

syntax = "proto3";

package market;

// Interface exported by the server.
service Market {
  // A server-to-client streaming RPC.
  //
  // Places an order in the Order Book
  rpc PlaceOrder(PlaceOrderRequest) returns (OrderId) {}

  // Obtains the current information on an order.
  //
  // An empty message with `order_found` set to false is returned
  // if no order was found with `OrderId`.
  rpc GetOrderStatus(OrderId) returns (LimitOrderInfo) {}

  // Attempts to cancel an ongoing order
  rpc CancelOrder(OrderId) returns (CancelOrderResponse) {}
}

// Information for placing a Limit Order
message PlaceOrderRequest {
  uint32 stock_id = 1;
  uint32 price = 2;
  uint32 quantity = 3;
  
}

message OrderId {
  uint64 order_id = 1;
}

message LimitOrderInfo {
    uint64 order_id = 1;
    uint64 timestamp = 2;
    int64 balance = 3;
    uint32 price = 4;
    uint32 quantity = 5;
    uint32 filled_quantity = 6;
    bool is_cancelled = 7;
}

message CancelOrderResponse {
    bool success = 1;
}
