// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: market.proto
// Protobuf C++ Version: 6.31.1

#include "market.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace market {

inline constexpr PlaceOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stock_id_{0u},
        price_{0u},
        quantity_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PlaceOrderRequest::PlaceOrderRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlaceOrderRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaceOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceOrderRequestDefaultTypeInternal() {}
  union {
    PlaceOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceOrderRequestDefaultTypeInternal _PlaceOrderRequest_default_instance_;

inline constexpr OrderId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_id_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR OrderId::OrderId(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderId_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderIdDefaultTypeInternal() {}
  union {
    OrderId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderIdDefaultTypeInternal _OrderId_default_instance_;

inline constexpr LimitOrderInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_id_{::uint64_t{0u}},
        timestamp_{::uint64_t{0u}},
        balance_{::int64_t{0}},
        price_{0u},
        quantity_{0u},
        filled_quantity_{0u},
        is_cancelled_{false} {}

template <typename>
PROTOBUF_CONSTEXPR LimitOrderInfo::LimitOrderInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LimitOrderInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LimitOrderInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LimitOrderInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LimitOrderInfoDefaultTypeInternal() {}
  union {
    LimitOrderInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LimitOrderInfoDefaultTypeInternal _LimitOrderInfo_default_instance_;

inline constexpr CancelOrderResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrderResponse::CancelOrderResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CancelOrderResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelOrderResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderResponseDefaultTypeInternal() {}
  union {
    CancelOrderResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;
}  // namespace market
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_market_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_market_2eproto = nullptr;
const ::uint32_t
    TableStruct_market_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::market::PlaceOrderRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::market::PlaceOrderRequest, _impl_.stock_id_),
        PROTOBUF_FIELD_OFFSET(::market::PlaceOrderRequest, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::market::PlaceOrderRequest, _impl_.quantity_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::market::OrderId, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::market::OrderId, _impl_.order_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.order_id_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.balance_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.filled_quantity_),
        PROTOBUF_FIELD_OFFSET(::market::LimitOrderInfo, _impl_.is_cancelled_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::market::CancelOrderResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::market::CancelOrderResponse, _impl_.success_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::market::PlaceOrderRequest)},
        {9, sizeof(::market::OrderId)},
        {14, sizeof(::market::LimitOrderInfo)},
        {31, sizeof(::market::CancelOrderResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::market::_PlaceOrderRequest_default_instance_._instance,
    &::market::_OrderId_default_instance_._instance,
    &::market::_LimitOrderInfo_default_instance_._instance,
    &::market::_CancelOrderResponse_default_instance_._instance,
};
const char descriptor_table_protodef_market_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014market.proto\022\006market\"F\n\021PlaceOrderRequ"
    "est\022\020\n\010stock_id\030\001 \001(\r\022\r\n\005price\030\002 \001(\r\022\020\n\010"
    "quantity\030\003 \001(\r\"\033\n\007OrderId\022\020\n\010order_id\030\001 "
    "\001(\004\"\226\001\n\016LimitOrderInfo\022\020\n\010order_id\030\001 \001(\004"
    "\022\021\n\ttimestamp\030\002 \001(\004\022\017\n\007balance\030\003 \001(\003\022\r\n\005"
    "price\030\004 \001(\r\022\020\n\010quantity\030\005 \001(\r\022\027\n\017filled_"
    "quantity\030\006 \001(\r\022\024\n\014is_cancelled\030\007 \001(\010\"&\n\023"
    "CancelOrderResponse\022\017\n\007success\030\001 \001(\0102\300\001\n"
    "\006Market\022:\n\nPlaceOrder\022\031.market.PlaceOrde"
    "rRequest\032\017.market.OrderId\"\000\022;\n\016GetOrderS"
    "tatus\022\017.market.OrderId\032\026.market.LimitOrd"
    "erInfo\"\000\022=\n\013CancelOrder\022\017.market.OrderId"
    "\032\033.market.CancelOrderResponse\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_market_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_market_2eproto = {
    false,
    false,
    519,
    descriptor_table_protodef_market_2eproto,
    "market.proto",
    &descriptor_table_market_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_market_2eproto::offsets,
    file_level_enum_descriptors_market_2eproto,
    file_level_service_descriptors_market_2eproto,
};
namespace market {
// ===================================================================

class PlaceOrderRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PlaceOrderRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_._has_bits_);
};

PlaceOrderRequest::PlaceOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlaceOrderRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:market.PlaceOrderRequest)
}
PlaceOrderRequest::PlaceOrderRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlaceOrderRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlaceOrderRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PlaceOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PlaceOrderRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stock_id_),
           0,
           offsetof(Impl_, quantity_) -
               offsetof(Impl_, stock_id_) +
               sizeof(Impl_::quantity_));
}
PlaceOrderRequest::~PlaceOrderRequest() {
  // @@protoc_insertion_point(destructor:market.PlaceOrderRequest)
  SharedDtor(*this);
}
inline void PlaceOrderRequest::SharedDtor(MessageLite& self) {
  PlaceOrderRequest& this_ = static_cast<PlaceOrderRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlaceOrderRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlaceOrderRequest(arena);
}
constexpr auto PlaceOrderRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PlaceOrderRequest),
                                            alignof(PlaceOrderRequest));
}
constexpr auto PlaceOrderRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlaceOrderRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlaceOrderRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlaceOrderRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlaceOrderRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlaceOrderRequest>(), &PlaceOrderRequest::ByteSizeLong,
              &PlaceOrderRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_._cached_size_),
          false,
      },
      &PlaceOrderRequest::kDescriptorMethods,
      &descriptor_table_market_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PlaceOrderRequest_class_data_ =
        PlaceOrderRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PlaceOrderRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlaceOrderRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlaceOrderRequest_class_data_.tc_table);
  return PlaceOrderRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2>
PlaceOrderRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlaceOrderRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::market::PlaceOrderRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 stock_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaceOrderRequest, _impl_.stock_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.stock_id_)}},
    // uint32 price = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaceOrderRequest, _impl_.price_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.price_)}},
    // uint32 quantity = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PlaceOrderRequest, _impl_.quantity_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.quantity_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 stock_id = 1;
    {PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.stock_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 price = 2;
    {PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.price_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 quantity = 3;
    {PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.quantity_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PlaceOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:market.PlaceOrderRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.stock_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.quantity_) -
        reinterpret_cast<char*>(&_impl_.stock_id_)) + sizeof(_impl_.quantity_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlaceOrderRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlaceOrderRequest& this_ = static_cast<const PlaceOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlaceOrderRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlaceOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:market.PlaceOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 stock_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_stock_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_stock_id(), target);
    }
  }

  // uint32 price = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_price() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_price(), target);
    }
  }

  // uint32 quantity = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_quantity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_quantity(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:market.PlaceOrderRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlaceOrderRequest::ByteSizeLong(const MessageLite& base) {
  const PlaceOrderRequest& this_ = static_cast<const PlaceOrderRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlaceOrderRequest::ByteSizeLong() const {
  const PlaceOrderRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:market.PlaceOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // uint32 stock_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_stock_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_stock_id());
      }
    }
    // uint32 price = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_price() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_price());
      }
    }
    // uint32 quantity = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_quantity());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlaceOrderRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaceOrderRequest*>(&to_msg);
  auto& from = static_cast<const PlaceOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:market.PlaceOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_stock_id() != 0) {
        _this->_impl_.stock_id_ = from._impl_.stock_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_price() != 0) {
        _this->_impl_.price_ = from._impl_.price_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceOrderRequest::CopyFrom(const PlaceOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:market.PlaceOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaceOrderRequest::InternalSwap(PlaceOrderRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.quantity_)
      + sizeof(PlaceOrderRequest::_impl_.quantity_)
      - PROTOBUF_FIELD_OFFSET(PlaceOrderRequest, _impl_.stock_id_)>(
          reinterpret_cast<char*>(&_impl_.stock_id_),
          reinterpret_cast<char*>(&other->_impl_.stock_id_));
}

::google::protobuf::Metadata PlaceOrderRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderId::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderId>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderId, _impl_._has_bits_);
};

OrderId::OrderId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderId_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:market.OrderId)
}
OrderId::OrderId(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OrderId& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderId_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE OrderId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void OrderId::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.order_id_ = {};
}
OrderId::~OrderId() {
  // @@protoc_insertion_point(destructor:market.OrderId)
  SharedDtor(*this);
}
inline void OrderId::SharedDtor(MessageLite& self) {
  OrderId& this_ = static_cast<OrderId&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderId::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderId(arena);
}
constexpr auto OrderId::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderId),
                                            alignof(OrderId));
}
constexpr auto OrderId::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderId_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderId::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderId>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderId::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderId>(), &OrderId::ByteSizeLong,
              &OrderId::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderId, _impl_._cached_size_),
          false,
      },
      &OrderId::kDescriptorMethods,
      &descriptor_table_market_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderId_class_data_ =
        OrderId::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderId::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderId_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderId_class_data_.tc_table);
  return OrderId_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
OrderId::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderId, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderId_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::market::OrderId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 order_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OrderId, _impl_.order_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(OrderId, _impl_.order_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 order_id = 1;
    {PROTOBUF_FIELD_OFFSET(OrderId, _impl_.order_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void OrderId::Clear() {
// @@protoc_insertion_point(message_clear_start:market.OrderId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderId::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderId& this_ = static_cast<const OrderId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderId::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:market.OrderId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 order_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_order_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_order_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:market.OrderId)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderId::ByteSizeLong(const MessageLite& base) {
  const OrderId& this_ = static_cast<const OrderId&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderId::ByteSizeLong() const {
  const OrderId& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:market.OrderId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // uint64 order_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_order_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_order_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderId*>(&to_msg);
  auto& from = static_cast<const OrderId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:market.OrderId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_order_id() != 0) {
      _this->_impl_.order_id_ = from._impl_.order_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderId::CopyFrom(const OrderId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:market.OrderId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderId::InternalSwap(OrderId* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.order_id_, other->_impl_.order_id_);
}

::google::protobuf::Metadata OrderId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LimitOrderInfo::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LimitOrderInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_._has_bits_);
};

LimitOrderInfo::LimitOrderInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LimitOrderInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:market.LimitOrderInfo)
}
LimitOrderInfo::LimitOrderInfo(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LimitOrderInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LimitOrderInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE LimitOrderInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void LimitOrderInfo::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, order_id_),
           0,
           offsetof(Impl_, is_cancelled_) -
               offsetof(Impl_, order_id_) +
               sizeof(Impl_::is_cancelled_));
}
LimitOrderInfo::~LimitOrderInfo() {
  // @@protoc_insertion_point(destructor:market.LimitOrderInfo)
  SharedDtor(*this);
}
inline void LimitOrderInfo::SharedDtor(MessageLite& self) {
  LimitOrderInfo& this_ = static_cast<LimitOrderInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LimitOrderInfo::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LimitOrderInfo(arena);
}
constexpr auto LimitOrderInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LimitOrderInfo),
                                            alignof(LimitOrderInfo));
}
constexpr auto LimitOrderInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LimitOrderInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LimitOrderInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LimitOrderInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LimitOrderInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LimitOrderInfo>(), &LimitOrderInfo::ByteSizeLong,
              &LimitOrderInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_._cached_size_),
          false,
      },
      &LimitOrderInfo::kDescriptorMethods,
      &descriptor_table_market_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LimitOrderInfo_class_data_ =
        LimitOrderInfo::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LimitOrderInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LimitOrderInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LimitOrderInfo_class_data_.tc_table);
  return LimitOrderInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2>
LimitOrderInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LimitOrderInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::market::LimitOrderInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 order_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LimitOrderInfo, _impl_.order_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.order_id_)}},
    // uint64 timestamp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LimitOrderInfo, _impl_.timestamp_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.timestamp_)}},
    // int64 balance = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LimitOrderInfo, _impl_.balance_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.balance_)}},
    // uint32 price = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LimitOrderInfo, _impl_.price_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.price_)}},
    // uint32 quantity = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LimitOrderInfo, _impl_.quantity_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.quantity_)}},
    // uint32 filled_quantity = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LimitOrderInfo, _impl_.filled_quantity_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.filled_quantity_)}},
    // bool is_cancelled = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(LimitOrderInfo, _impl_.is_cancelled_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.is_cancelled_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 order_id = 1;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.order_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // uint64 timestamp = 2;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt64)},
    // int64 balance = 3;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.balance_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // uint32 price = 4;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 quantity = 5;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.quantity_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 filled_quantity = 6;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.filled_quantity_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // bool is_cancelled = 7;
    {PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.is_cancelled_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void LimitOrderInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:market.LimitOrderInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    ::memset(&_impl_.order_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_cancelled_) -
        reinterpret_cast<char*>(&_impl_.order_id_)) + sizeof(_impl_.is_cancelled_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LimitOrderInfo::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LimitOrderInfo& this_ = static_cast<const LimitOrderInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LimitOrderInfo::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LimitOrderInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:market.LimitOrderInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 order_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_order_id() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          1, this_._internal_order_id(), target);
    }
  }

  // uint64 timestamp = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
          2, this_._internal_timestamp(), target);
    }
  }

  // int64 balance = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_balance() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_balance(), target);
    }
  }

  // uint32 price = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_price() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_price(), target);
    }
  }

  // uint32 quantity = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_quantity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_quantity(), target);
    }
  }

  // uint32 filled_quantity = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_filled_quantity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_filled_quantity(), target);
    }
  }

  // bool is_cancelled = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_is_cancelled() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          7, this_._internal_is_cancelled(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:market.LimitOrderInfo)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LimitOrderInfo::ByteSizeLong(const MessageLite& base) {
  const LimitOrderInfo& this_ = static_cast<const LimitOrderInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LimitOrderInfo::ByteSizeLong() const {
  const LimitOrderInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:market.LimitOrderInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // uint64 order_id = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_order_id() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_order_id());
      }
    }
    // uint64 timestamp = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // int64 balance = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_balance() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_balance());
      }
    }
    // uint32 price = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_price() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_price());
      }
    }
    // uint32 quantity = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_quantity());
      }
    }
    // uint32 filled_quantity = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_filled_quantity() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_filled_quantity());
      }
    }
    // bool is_cancelled = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_is_cancelled() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LimitOrderInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LimitOrderInfo*>(&to_msg);
  auto& from = static_cast<const LimitOrderInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:market.LimitOrderInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_order_id() != 0) {
        _this->_impl_.order_id_ = from._impl_.order_id_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_balance() != 0) {
        _this->_impl_.balance_ = from._impl_.balance_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_price() != 0) {
        _this->_impl_.price_ = from._impl_.price_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_quantity() != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_filled_quantity() != 0) {
        _this->_impl_.filled_quantity_ = from._impl_.filled_quantity_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_is_cancelled() != 0) {
        _this->_impl_.is_cancelled_ = from._impl_.is_cancelled_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LimitOrderInfo::CopyFrom(const LimitOrderInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:market.LimitOrderInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LimitOrderInfo::InternalSwap(LimitOrderInfo* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.is_cancelled_)
      + sizeof(LimitOrderInfo::_impl_.is_cancelled_)
      - PROTOBUF_FIELD_OFFSET(LimitOrderInfo, _impl_.order_id_)>(
          reinterpret_cast<char*>(&_impl_.order_id_),
          reinterpret_cast<char*>(&other->_impl_.order_id_));
}

::google::protobuf::Metadata LimitOrderInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelOrderResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CancelOrderResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_);
};

CancelOrderResponse::CancelOrderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelOrderResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:market.CancelOrderResponse)
}
CancelOrderResponse::CancelOrderResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CancelOrderResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelOrderResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CancelOrderResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CancelOrderResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
CancelOrderResponse::~CancelOrderResponse() {
  // @@protoc_insertion_point(destructor:market.CancelOrderResponse)
  SharedDtor(*this);
}
inline void CancelOrderResponse::SharedDtor(MessageLite& self) {
  CancelOrderResponse& this_ = static_cast<CancelOrderResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CancelOrderResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CancelOrderResponse(arena);
}
constexpr auto CancelOrderResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CancelOrderResponse),
                                            alignof(CancelOrderResponse));
}
constexpr auto CancelOrderResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CancelOrderResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CancelOrderResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CancelOrderResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CancelOrderResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CancelOrderResponse>(), &CancelOrderResponse::ByteSizeLong,
              &CancelOrderResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._cached_size_),
          false,
      },
      &CancelOrderResponse::kDescriptorMethods,
      &descriptor_table_market_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CancelOrderResponse_class_data_ =
        CancelOrderResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CancelOrderResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CancelOrderResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CancelOrderResponse_class_data_.tc_table);
  return CancelOrderResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CancelOrderResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CancelOrderResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::market::CancelOrderResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CancelOrderResponse, _impl_.success_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrderResponse, _impl_.success_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CancelOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:market.CancelOrderResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CancelOrderResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CancelOrderResponse& this_ = static_cast<const CancelOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CancelOrderResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CancelOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:market.CancelOrderResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:market.CancelOrderResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CancelOrderResponse::ByteSizeLong(const MessageLite& base) {
  const CancelOrderResponse& this_ = static_cast<const CancelOrderResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CancelOrderResponse::ByteSizeLong() const {
  const CancelOrderResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:market.CancelOrderResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bool success = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CancelOrderResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelOrderResponse*>(&to_msg);
  auto& from = static_cast<const CancelOrderResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:market.CancelOrderResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_success() != 0) {
      _this->_impl_.success_ = from._impl_.success_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrderResponse::CopyFrom(const CancelOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:market.CancelOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelOrderResponse::InternalSwap(CancelOrderResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata CancelOrderResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace market
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_market_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
