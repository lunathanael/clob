// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: market.proto
// Protobuf C++ Version: 6.31.1

#ifndef market_2eproto_2epb_2eh
#define market_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_market_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_market_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_market_2eproto;
}  // extern "C"
namespace marketmaker {
enum OrderType : int;
extern const uint32_t OrderType_internal_data_[];
class BestBidAskResponse;
struct BestBidAskResponseDefaultTypeInternal;
extern BestBidAskResponseDefaultTypeInternal _BestBidAskResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BestBidAskResponse_class_data_;
class CancelOrderRequest;
struct CancelOrderRequestDefaultTypeInternal;
extern CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CancelOrderRequest_class_data_;
class CancelOrderResponse;
struct CancelOrderResponseDefaultTypeInternal;
extern CancelOrderResponseDefaultTypeInternal _CancelOrderResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CancelOrderResponse_class_data_;
class GetOrderRequest;
struct GetOrderRequestDefaultTypeInternal;
extern GetOrderRequestDefaultTypeInternal _GetOrderRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetOrderRequest_class_data_;
class LimitOrderId;
struct LimitOrderIdDefaultTypeInternal;
extern LimitOrderIdDefaultTypeInternal _LimitOrderId_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LimitOrderId_class_data_;
class LimitOrderInfo;
struct LimitOrderInfoDefaultTypeInternal;
extern LimitOrderInfoDefaultTypeInternal _LimitOrderInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LimitOrderInfo_class_data_;
class PlaceOrderRequest;
struct PlaceOrderRequestDefaultTypeInternal;
extern PlaceOrderRequestDefaultTypeInternal _PlaceOrderRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PlaceOrderRequest_class_data_;
class StockId;
struct StockIdDefaultTypeInternal;
extern StockIdDefaultTypeInternal _StockId_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StockId_class_data_;
}  // namespace marketmaker
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::marketmaker::OrderType_internal_data_>
    internal::EnumTraitsImpl::value<::marketmaker::OrderType>;
}  // namespace protobuf
}  // namespace google

namespace marketmaker {
enum OrderType : int {
  Bid = 0,
  Ask = 1,
  OrderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  OrderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t OrderType_internal_data_[];
inline constexpr OrderType OrderType_MIN =
    static_cast<OrderType>(0);
inline constexpr OrderType OrderType_MAX =
    static_cast<OrderType>(1);
inline bool OrderType_IsValid(int value) {
  return 0 <= value && value <= 1;
}
inline constexpr int OrderType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL OrderType_descriptor();
template <typename T>
const ::std::string& OrderType_Name(T value) {
  static_assert(::std::is_same<T, OrderType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to OrderType_Name().");
  return OrderType_Name(static_cast<OrderType>(value));
}
template <>
inline const ::std::string& OrderType_Name(OrderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OrderType_descriptor, 0, 1>(
      static_cast<int>(value));
}
inline bool OrderType_Parse(
    ::absl::string_view name, OrderType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderType>(OrderType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class StockId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.StockId) */ {
 public:
  inline StockId() : StockId(nullptr) {}
  ~StockId() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StockId* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StockId));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StockId(::google::protobuf::internal::ConstantInitialized);

  inline StockId(const StockId& from) : StockId(nullptr, from) {}
  inline StockId(StockId&& from) noexcept
      : StockId(nullptr, ::std::move(from)) {}
  inline StockId& operator=(const StockId& from) {
    CopyFrom(from);
    return *this;
  }
  inline StockId& operator=(StockId&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StockId& default_instance() {
    return *reinterpret_cast<const StockId*>(
        &_StockId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(StockId& a, StockId& b) { a.Swap(&b); }
  inline void Swap(StockId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StockId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StockId* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<StockId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StockId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StockId& from) { StockId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(StockId* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.StockId"; }

 protected:
  explicit StockId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StockId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StockId& from);
  StockId(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StockId&& from) noexcept
      : StockId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStockIdFieldNumber = 1,
  };
  // uint32 stock_id = 1;
  void clear_stock_id() ;
  ::uint32_t stock_id() const;
  void set_stock_id(::uint32_t value);

  private:
  ::uint32_t _internal_stock_id() const;
  void _internal_set_stock_id(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.StockId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const StockId& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t stock_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StockId_class_data_;
// -------------------------------------------------------------------

class PlaceOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.PlaceOrderRequest) */ {
 public:
  inline PlaceOrderRequest() : PlaceOrderRequest(nullptr) {}
  ~PlaceOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlaceOrderRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlaceOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlaceOrderRequest(::google::protobuf::internal::ConstantInitialized);

  inline PlaceOrderRequest(const PlaceOrderRequest& from) : PlaceOrderRequest(nullptr, from) {}
  inline PlaceOrderRequest(PlaceOrderRequest&& from) noexcept
      : PlaceOrderRequest(nullptr, ::std::move(from)) {}
  inline PlaceOrderRequest& operator=(const PlaceOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlaceOrderRequest& operator=(PlaceOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlaceOrderRequest& default_instance() {
    return *reinterpret_cast<const PlaceOrderRequest*>(
        &_PlaceOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PlaceOrderRequest& a, PlaceOrderRequest& b) { a.Swap(&b); }
  inline void Swap(PlaceOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlaceOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlaceOrderRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlaceOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlaceOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlaceOrderRequest& from) { PlaceOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlaceOrderRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.PlaceOrderRequest"; }

 protected:
  explicit PlaceOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PlaceOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PlaceOrderRequest& from);
  PlaceOrderRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PlaceOrderRequest&& from) noexcept
      : PlaceOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStockIdFieldNumber = 1,
    kPriceFieldNumber = 2,
    kQuantityFieldNumber = 3,
    kOrderTypeFieldNumber = 4,
  };
  // uint32 stock_id = 1;
  void clear_stock_id() ;
  ::uint32_t stock_id() const;
  void set_stock_id(::uint32_t value);

  private:
  ::uint32_t _internal_stock_id() const;
  void _internal_set_stock_id(::uint32_t value);

  public:
  // uint32 price = 2;
  void clear_price() ;
  ::uint32_t price() const;
  void set_price(::uint32_t value);

  private:
  ::uint32_t _internal_price() const;
  void _internal_set_price(::uint32_t value);

  public:
  // uint32 quantity = 3;
  void clear_quantity() ;
  ::uint32_t quantity() const;
  void set_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_quantity() const;
  void _internal_set_quantity(::uint32_t value);

  public:
  // .marketmaker.OrderType order_type = 4;
  void clear_order_type() ;
  ::marketmaker::OrderType order_type() const;
  void set_order_type(::marketmaker::OrderType value);

  private:
  ::marketmaker::OrderType _internal_order_type() const;
  void _internal_set_order_type(::marketmaker::OrderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.PlaceOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PlaceOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t stock_id_;
    ::uint32_t price_;
    ::uint32_t quantity_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PlaceOrderRequest_class_data_;
// -------------------------------------------------------------------

class LimitOrderInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.LimitOrderInfo) */ {
 public:
  inline LimitOrderInfo() : LimitOrderInfo(nullptr) {}
  ~LimitOrderInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LimitOrderInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LimitOrderInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LimitOrderInfo(::google::protobuf::internal::ConstantInitialized);

  inline LimitOrderInfo(const LimitOrderInfo& from) : LimitOrderInfo(nullptr, from) {}
  inline LimitOrderInfo(LimitOrderInfo&& from) noexcept
      : LimitOrderInfo(nullptr, ::std::move(from)) {}
  inline LimitOrderInfo& operator=(const LimitOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline LimitOrderInfo& operator=(LimitOrderInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LimitOrderInfo& default_instance() {
    return *reinterpret_cast<const LimitOrderInfo*>(
        &_LimitOrderInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(LimitOrderInfo& a, LimitOrderInfo& b) { a.Swap(&b); }
  inline void Swap(LimitOrderInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LimitOrderInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LimitOrderInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LimitOrderInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LimitOrderInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LimitOrderInfo& from) { LimitOrderInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LimitOrderInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.LimitOrderInfo"; }

 protected:
  explicit LimitOrderInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LimitOrderInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LimitOrderInfo& from);
  LimitOrderInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LimitOrderInfo&& from) noexcept
      : LimitOrderInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kBalanceFieldNumber = 3,
    kPriceFieldNumber = 4,
    kQuantityFieldNumber = 5,
    kFilledQuantityFieldNumber = 6,
    kIsCancelledFieldNumber = 7,
    kOrderFoundFieldNumber = 8,
  };
  // uint64 order_id = 1;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // uint64 timestamp = 2;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // int64 balance = 3;
  void clear_balance() ;
  ::int64_t balance() const;
  void set_balance(::int64_t value);

  private:
  ::int64_t _internal_balance() const;
  void _internal_set_balance(::int64_t value);

  public:
  // uint32 price = 4;
  void clear_price() ;
  ::uint32_t price() const;
  void set_price(::uint32_t value);

  private:
  ::uint32_t _internal_price() const;
  void _internal_set_price(::uint32_t value);

  public:
  // uint32 quantity = 5;
  void clear_quantity() ;
  ::uint32_t quantity() const;
  void set_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_quantity() const;
  void _internal_set_quantity(::uint32_t value);

  public:
  // uint32 filled_quantity = 6;
  void clear_filled_quantity() ;
  ::uint32_t filled_quantity() const;
  void set_filled_quantity(::uint32_t value);

  private:
  ::uint32_t _internal_filled_quantity() const;
  void _internal_set_filled_quantity(::uint32_t value);

  public:
  // bool is_cancelled = 7;
  void clear_is_cancelled() ;
  bool is_cancelled() const;
  void set_is_cancelled(bool value);

  private:
  bool _internal_is_cancelled() const;
  void _internal_set_is_cancelled(bool value);

  public:
  // bool order_found = 8;
  void clear_order_found() ;
  bool order_found() const;
  void set_order_found(bool value);

  private:
  bool _internal_order_found() const;
  void _internal_set_order_found(bool value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.LimitOrderInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LimitOrderInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t order_id_;
    ::uint64_t timestamp_;
    ::int64_t balance_;
    ::uint32_t price_;
    ::uint32_t quantity_;
    ::uint32_t filled_quantity_;
    bool is_cancelled_;
    bool order_found_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LimitOrderInfo_class_data_;
// -------------------------------------------------------------------

class LimitOrderId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.LimitOrderId) */ {
 public:
  inline LimitOrderId() : LimitOrderId(nullptr) {}
  ~LimitOrderId() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LimitOrderId* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LimitOrderId));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LimitOrderId(::google::protobuf::internal::ConstantInitialized);

  inline LimitOrderId(const LimitOrderId& from) : LimitOrderId(nullptr, from) {}
  inline LimitOrderId(LimitOrderId&& from) noexcept
      : LimitOrderId(nullptr, ::std::move(from)) {}
  inline LimitOrderId& operator=(const LimitOrderId& from) {
    CopyFrom(from);
    return *this;
  }
  inline LimitOrderId& operator=(LimitOrderId&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LimitOrderId& default_instance() {
    return *reinterpret_cast<const LimitOrderId*>(
        &_LimitOrderId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LimitOrderId& a, LimitOrderId& b) { a.Swap(&b); }
  inline void Swap(LimitOrderId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LimitOrderId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LimitOrderId* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LimitOrderId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LimitOrderId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LimitOrderId& from) { LimitOrderId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LimitOrderId* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.LimitOrderId"; }

 protected:
  explicit LimitOrderId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LimitOrderId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LimitOrderId& from);
  LimitOrderId(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LimitOrderId&& from) noexcept
      : LimitOrderId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderIdFieldNumber = 1,
  };
  // uint64 order_id = 1;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.LimitOrderId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LimitOrderId& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t order_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LimitOrderId_class_data_;
// -------------------------------------------------------------------

class GetOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.GetOrderRequest) */ {
 public:
  inline GetOrderRequest() : GetOrderRequest(nullptr) {}
  ~GetOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOrderRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOrderRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetOrderRequest(const GetOrderRequest& from) : GetOrderRequest(nullptr, from) {}
  inline GetOrderRequest(GetOrderRequest&& from) noexcept
      : GetOrderRequest(nullptr, ::std::move(from)) {}
  inline GetOrderRequest& operator=(const GetOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOrderRequest& operator=(GetOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOrderRequest& default_instance() {
    return *reinterpret_cast<const GetOrderRequest*>(
        &_GetOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetOrderRequest& a, GetOrderRequest& b) { a.Swap(&b); }
  inline void Swap(GetOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOrderRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOrderRequest& from) { GetOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOrderRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.GetOrderRequest"; }

 protected:
  explicit GetOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetOrderRequest& from);
  GetOrderRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetOrderRequest&& from) noexcept
      : GetOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderIdFieldNumber = 1,
    kOrderTypeFieldNumber = 2,
  };
  // uint64 order_id = 1;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // .marketmaker.OrderType order_type = 2;
  void clear_order_type() ;
  ::marketmaker::OrderType order_type() const;
  void set_order_type(::marketmaker::OrderType value);

  private:
  ::marketmaker::OrderType _internal_order_type() const;
  void _internal_set_order_type(::marketmaker::OrderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.GetOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t order_id_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetOrderRequest_class_data_;
// -------------------------------------------------------------------

class CancelOrderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.CancelOrderResponse) */ {
 public:
  inline CancelOrderResponse() : CancelOrderResponse(nullptr) {}
  ~CancelOrderResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelOrderResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelOrderResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOrderResponse(::google::protobuf::internal::ConstantInitialized);

  inline CancelOrderResponse(const CancelOrderResponse& from) : CancelOrderResponse(nullptr, from) {}
  inline CancelOrderResponse(CancelOrderResponse&& from) noexcept
      : CancelOrderResponse(nullptr, ::std::move(from)) {}
  inline CancelOrderResponse& operator=(const CancelOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOrderResponse& operator=(CancelOrderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOrderResponse& default_instance() {
    return *reinterpret_cast<const CancelOrderResponse*>(
        &_CancelOrderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CancelOrderResponse& a, CancelOrderResponse& b) { a.Swap(&b); }
  inline void Swap(CancelOrderResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOrderResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOrderResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelOrderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelOrderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelOrderResponse& from) { CancelOrderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelOrderResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.CancelOrderResponse"; }

 protected:
  explicit CancelOrderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CancelOrderResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CancelOrderResponse& from);
  CancelOrderResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CancelOrderResponse&& from) noexcept
      : CancelOrderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.CancelOrderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CancelOrderResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CancelOrderResponse_class_data_;
// -------------------------------------------------------------------

class CancelOrderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.CancelOrderRequest) */ {
 public:
  inline CancelOrderRequest() : CancelOrderRequest(nullptr) {}
  ~CancelOrderRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CancelOrderRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CancelOrderRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CancelOrderRequest(::google::protobuf::internal::ConstantInitialized);

  inline CancelOrderRequest(const CancelOrderRequest& from) : CancelOrderRequest(nullptr, from) {}
  inline CancelOrderRequest(CancelOrderRequest&& from) noexcept
      : CancelOrderRequest(nullptr, ::std::move(from)) {}
  inline CancelOrderRequest& operator=(const CancelOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CancelOrderRequest& operator=(CancelOrderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CancelOrderRequest& default_instance() {
    return *reinterpret_cast<const CancelOrderRequest*>(
        &_CancelOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(CancelOrderRequest& a, CancelOrderRequest& b) { a.Swap(&b); }
  inline void Swap(CancelOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CancelOrderRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CancelOrderRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CancelOrderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CancelOrderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CancelOrderRequest& from) { CancelOrderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CancelOrderRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.CancelOrderRequest"; }

 protected:
  explicit CancelOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CancelOrderRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CancelOrderRequest& from);
  CancelOrderRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CancelOrderRequest&& from) noexcept
      : CancelOrderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderIdFieldNumber = 1,
    kOrderTypeFieldNumber = 2,
  };
  // uint64 order_id = 1;
  void clear_order_id() ;
  ::uint64_t order_id() const;
  void set_order_id(::uint64_t value);

  private:
  ::uint64_t _internal_order_id() const;
  void _internal_set_order_id(::uint64_t value);

  public:
  // .marketmaker.OrderType order_type = 2;
  void clear_order_type() ;
  ::marketmaker::OrderType order_type() const;
  void set_order_type(::marketmaker::OrderType value);

  private:
  ::marketmaker::OrderType _internal_order_type() const;
  void _internal_set_order_type(::marketmaker::OrderType value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.CancelOrderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CancelOrderRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t order_id_;
    int order_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CancelOrderRequest_class_data_;
// -------------------------------------------------------------------

class BestBidAskResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:marketmaker.BestBidAskResponse) */ {
 public:
  inline BestBidAskResponse() : BestBidAskResponse(nullptr) {}
  ~BestBidAskResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BestBidAskResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BestBidAskResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BestBidAskResponse(::google::protobuf::internal::ConstantInitialized);

  inline BestBidAskResponse(const BestBidAskResponse& from) : BestBidAskResponse(nullptr, from) {}
  inline BestBidAskResponse(BestBidAskResponse&& from) noexcept
      : BestBidAskResponse(nullptr, ::std::move(from)) {}
  inline BestBidAskResponse& operator=(const BestBidAskResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BestBidAskResponse& operator=(BestBidAskResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BestBidAskResponse& default_instance() {
    return *reinterpret_cast<const BestBidAskResponse*>(
        &_BestBidAskResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(BestBidAskResponse& a, BestBidAskResponse& b) { a.Swap(&b); }
  inline void Swap(BestBidAskResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BestBidAskResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BestBidAskResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BestBidAskResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BestBidAskResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BestBidAskResponse& from) { BestBidAskResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BestBidAskResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "marketmaker.BestBidAskResponse"; }

 protected:
  explicit BestBidAskResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BestBidAskResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BestBidAskResponse& from);
  BestBidAskResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BestBidAskResponse&& from) noexcept
      : BestBidAskResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBestBidFieldNumber = 1,
    kBestAskFieldNumber = 2,
  };
  // uint32 best_bid = 1;
  void clear_best_bid() ;
  ::uint32_t best_bid() const;
  void set_best_bid(::uint32_t value);

  private:
  ::uint32_t _internal_best_bid() const;
  void _internal_set_best_bid(::uint32_t value);

  public:
  // uint32 best_ask = 2;
  void clear_best_ask() ;
  ::uint32_t best_ask() const;
  void set_best_ask(::uint32_t value);

  private:
  ::uint32_t _internal_best_ask() const;
  void _internal_set_best_ask(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:marketmaker.BestBidAskResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BestBidAskResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t best_bid_;
    ::uint32_t best_ask_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_market_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BestBidAskResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PlaceOrderRequest

// uint32 stock_id = 1;
inline void PlaceOrderRequest::clear_stock_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stock_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t PlaceOrderRequest::stock_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.PlaceOrderRequest.stock_id)
  return _internal_stock_id();
}
inline void PlaceOrderRequest::set_stock_id(::uint32_t value) {
  _internal_set_stock_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.PlaceOrderRequest.stock_id)
}
inline ::uint32_t PlaceOrderRequest::_internal_stock_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stock_id_;
}
inline void PlaceOrderRequest::_internal_set_stock_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stock_id_ = value;
}

// uint32 price = 2;
inline void PlaceOrderRequest::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t PlaceOrderRequest::price() const {
  // @@protoc_insertion_point(field_get:marketmaker.PlaceOrderRequest.price)
  return _internal_price();
}
inline void PlaceOrderRequest::set_price(::uint32_t value) {
  _internal_set_price(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketmaker.PlaceOrderRequest.price)
}
inline ::uint32_t PlaceOrderRequest::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void PlaceOrderRequest::_internal_set_price(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// uint32 quantity = 3;
inline void PlaceOrderRequest::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t PlaceOrderRequest::quantity() const {
  // @@protoc_insertion_point(field_get:marketmaker.PlaceOrderRequest.quantity)
  return _internal_quantity();
}
inline void PlaceOrderRequest::set_quantity(::uint32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:marketmaker.PlaceOrderRequest.quantity)
}
inline ::uint32_t PlaceOrderRequest::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void PlaceOrderRequest::_internal_set_quantity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// .marketmaker.OrderType order_type = 4;
inline void PlaceOrderRequest::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::marketmaker::OrderType PlaceOrderRequest::order_type() const {
  // @@protoc_insertion_point(field_get:marketmaker.PlaceOrderRequest.order_type)
  return _internal_order_type();
}
inline void PlaceOrderRequest::set_order_type(::marketmaker::OrderType value) {
  _internal_set_order_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:marketmaker.PlaceOrderRequest.order_type)
}
inline ::marketmaker::OrderType PlaceOrderRequest::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketmaker::OrderType>(_impl_.order_type_);
}
inline void PlaceOrderRequest::_internal_set_order_type(::marketmaker::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// -------------------------------------------------------------------

// GetOrderRequest

// uint64 order_id = 1;
inline void GetOrderRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t GetOrderRequest::order_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.GetOrderRequest.order_id)
  return _internal_order_id();
}
inline void GetOrderRequest::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.GetOrderRequest.order_id)
}
inline ::uint64_t GetOrderRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void GetOrderRequest::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// .marketmaker.OrderType order_type = 2;
inline void GetOrderRequest::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::marketmaker::OrderType GetOrderRequest::order_type() const {
  // @@protoc_insertion_point(field_get:marketmaker.GetOrderRequest.order_type)
  return _internal_order_type();
}
inline void GetOrderRequest::set_order_type(::marketmaker::OrderType value) {
  _internal_set_order_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketmaker.GetOrderRequest.order_type)
}
inline ::marketmaker::OrderType GetOrderRequest::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketmaker::OrderType>(_impl_.order_type_);
}
inline void GetOrderRequest::_internal_set_order_type(::marketmaker::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// -------------------------------------------------------------------

// CancelOrderRequest

// uint64 order_id = 1;
inline void CancelOrderRequest::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t CancelOrderRequest::order_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.CancelOrderRequest.order_id)
  return _internal_order_id();
}
inline void CancelOrderRequest::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.CancelOrderRequest.order_id)
}
inline ::uint64_t CancelOrderRequest::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void CancelOrderRequest::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// .marketmaker.OrderType order_type = 2;
inline void CancelOrderRequest::clear_order_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::marketmaker::OrderType CancelOrderRequest::order_type() const {
  // @@protoc_insertion_point(field_get:marketmaker.CancelOrderRequest.order_type)
  return _internal_order_type();
}
inline void CancelOrderRequest::set_order_type(::marketmaker::OrderType value) {
  _internal_set_order_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketmaker.CancelOrderRequest.order_type)
}
inline ::marketmaker::OrderType CancelOrderRequest::_internal_order_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::marketmaker::OrderType>(_impl_.order_type_);
}
inline void CancelOrderRequest::_internal_set_order_type(::marketmaker::OrderType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_type_ = value;
}

// -------------------------------------------------------------------

// LimitOrderId

// uint64 order_id = 1;
inline void LimitOrderId::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t LimitOrderId::order_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderId.order_id)
  return _internal_order_id();
}
inline void LimitOrderId::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderId.order_id)
}
inline ::uint64_t LimitOrderId::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void LimitOrderId::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// -------------------------------------------------------------------

// LimitOrderInfo

// uint64 order_id = 1;
inline void LimitOrderInfo::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t LimitOrderInfo::order_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.order_id)
  return _internal_order_id();
}
inline void LimitOrderInfo::set_order_id(::uint64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.order_id)
}
inline ::uint64_t LimitOrderInfo::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void LimitOrderInfo::_internal_set_order_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// uint64 timestamp = 2;
inline void LimitOrderInfo::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t LimitOrderInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.timestamp)
  return _internal_timestamp();
}
inline void LimitOrderInfo::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.timestamp)
}
inline ::uint64_t LimitOrderInfo::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void LimitOrderInfo::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// int64 balance = 3;
inline void LimitOrderInfo::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t LimitOrderInfo::balance() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.balance)
  return _internal_balance();
}
inline void LimitOrderInfo::set_balance(::int64_t value) {
  _internal_set_balance(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.balance)
}
inline ::int64_t LimitOrderInfo::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balance_;
}
inline void LimitOrderInfo::_internal_set_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = value;
}

// uint32 price = 4;
inline void LimitOrderInfo::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t LimitOrderInfo::price() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.price)
  return _internal_price();
}
inline void LimitOrderInfo::set_price(::uint32_t value) {
  _internal_set_price(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.price)
}
inline ::uint32_t LimitOrderInfo::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void LimitOrderInfo::_internal_set_price(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// uint32 quantity = 5;
inline void LimitOrderInfo::clear_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t LimitOrderInfo::quantity() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.quantity)
  return _internal_quantity();
}
inline void LimitOrderInfo::set_quantity(::uint32_t value) {
  _internal_set_quantity(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.quantity)
}
inline ::uint32_t LimitOrderInfo::_internal_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.quantity_;
}
inline void LimitOrderInfo::_internal_set_quantity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.quantity_ = value;
}

// uint32 filled_quantity = 6;
inline void LimitOrderInfo::clear_filled_quantity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filled_quantity_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t LimitOrderInfo::filled_quantity() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.filled_quantity)
  return _internal_filled_quantity();
}
inline void LimitOrderInfo::set_filled_quantity(::uint32_t value) {
  _internal_set_filled_quantity(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.filled_quantity)
}
inline ::uint32_t LimitOrderInfo::_internal_filled_quantity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filled_quantity_;
}
inline void LimitOrderInfo::_internal_set_filled_quantity(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filled_quantity_ = value;
}

// bool is_cancelled = 7;
inline void LimitOrderInfo::clear_is_cancelled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cancelled_ = false;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline bool LimitOrderInfo::is_cancelled() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.is_cancelled)
  return _internal_is_cancelled();
}
inline void LimitOrderInfo::set_is_cancelled(bool value) {
  _internal_set_is_cancelled(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.is_cancelled)
}
inline bool LimitOrderInfo::_internal_is_cancelled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_cancelled_;
}
inline void LimitOrderInfo::_internal_set_is_cancelled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_cancelled_ = value;
}

// bool order_found = 8;
inline void LimitOrderInfo::clear_order_found() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_found_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool LimitOrderInfo::order_found() const {
  // @@protoc_insertion_point(field_get:marketmaker.LimitOrderInfo.order_found)
  return _internal_order_found();
}
inline void LimitOrderInfo::set_order_found(bool value) {
  _internal_set_order_found(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:marketmaker.LimitOrderInfo.order_found)
}
inline bool LimitOrderInfo::_internal_order_found() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_found_;
}
inline void LimitOrderInfo::_internal_set_order_found(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_found_ = value;
}

// -------------------------------------------------------------------

// CancelOrderResponse

// bool success = 1;
inline void CancelOrderResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool CancelOrderResponse::success() const {
  // @@protoc_insertion_point(field_get:marketmaker.CancelOrderResponse.success)
  return _internal_success();
}
inline void CancelOrderResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.CancelOrderResponse.success)
}
inline bool CancelOrderResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void CancelOrderResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// -------------------------------------------------------------------

// StockId

// uint32 stock_id = 1;
inline void StockId::clear_stock_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stock_id_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t StockId::stock_id() const {
  // @@protoc_insertion_point(field_get:marketmaker.StockId.stock_id)
  return _internal_stock_id();
}
inline void StockId::set_stock_id(::uint32_t value) {
  _internal_set_stock_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.StockId.stock_id)
}
inline ::uint32_t StockId::_internal_stock_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stock_id_;
}
inline void StockId::_internal_set_stock_id(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stock_id_ = value;
}

// -------------------------------------------------------------------

// BestBidAskResponse

// uint32 best_bid = 1;
inline void BestBidAskResponse::clear_best_bid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_bid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t BestBidAskResponse::best_bid() const {
  // @@protoc_insertion_point(field_get:marketmaker.BestBidAskResponse.best_bid)
  return _internal_best_bid();
}
inline void BestBidAskResponse::set_best_bid(::uint32_t value) {
  _internal_set_best_bid(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:marketmaker.BestBidAskResponse.best_bid)
}
inline ::uint32_t BestBidAskResponse::_internal_best_bid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_bid_;
}
inline void BestBidAskResponse::_internal_set_best_bid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_bid_ = value;
}

// uint32 best_ask = 2;
inline void BestBidAskResponse::clear_best_ask() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ask_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t BestBidAskResponse::best_ask() const {
  // @@protoc_insertion_point(field_get:marketmaker.BestBidAskResponse.best_ask)
  return _internal_best_ask();
}
inline void BestBidAskResponse::set_best_ask(::uint32_t value) {
  _internal_set_best_ask(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:marketmaker.BestBidAskResponse.best_ask)
}
inline ::uint32_t BestBidAskResponse::_internal_best_ask() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_ask_;
}
inline void BestBidAskResponse::_internal_set_best_ask(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_ask_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace marketmaker


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::marketmaker::OrderType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::marketmaker::OrderType>() {
  return ::marketmaker::OrderType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // market_2eproto_2epb_2eh
